{"version":3,"sources":["ImageFigure.tsx","homePage/HomePage.tsx","resources/text/introduction.tsx","resources/text/dataset.tsx","resources/text/goal.tsx","resources/text/networkConstruction.tsx","resources/wreath.png","topBar/TopBarButton.tsx","topBar/TopBar.tsx","bottomBar/BottomBar.tsx","sentimental/SentimentalPage.tsx","resources/text/sentIntroduction.tsx","resources/text/sentText1.tsx","resources/text/sentText2.tsx","collaborations/collaborationsPage.tsx","resources/text/collabIntro.tsx","resources/text/collabText1.tsx","App.tsx","reportWebVitals.js","index.js"],"names":["ImageFigure","style","minHeight","this","props","Grid","container","direction","justify","width","left","right","React","Component","HomePage","alignItems","item","plugins","gfm","className","Divider","height","display","justifyContent","alignContent","src","process","alt","TopBarButton","Button","color","onClick","setWindow","window","spacing","christmasMode","wreath","Typography","variant","typographyVariant","selected","label","TopBar","AppBar","position","Toolbar","selectedWindow","BottomBar","bottom","backgroundColor","target","href","marginRight","SentimentalPage","CollaborationsPage","App","bind","state","n","setState","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b0c2756b.chunk.js","sourcesContent":["import { Grid } from '@material-ui/core';\r\nimport React from 'react';\r\n\r\ninterface Props {\r\n    left: any;\r\n    right: any;\r\n    minHeight?: number;\r\n}\r\n\r\ninterface State {\r\n\r\n}\r\n\r\nclass ImageFigure extends React.Component<Props, State>{\r\n    render() {\r\n        return (\r\n            <div style={{minHeight: this.props.minHeight ?? \"256px\"}}>\r\n                <Grid container direction=\"row\" justify=\"space-around\">\r\n                    <div style={{ width: \"48%\" }}>\r\n                        {this.props.left}\r\n                    </div>\r\n                    <div style={{ width: \"48%\" }}>\r\n                        {this.props.right}\r\n                    </div>\r\n                </Grid>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ImageFigure;","import { Divider, Grid } from '@material-ui/core';\r\nimport ImageFigure from '../ImageFigure';\r\nimport React from 'react';\r\nimport NetworkConstructionText from '../resources/text/networkConstruction';\r\nimport IntroductionText from '../resources/text/introduction';\r\nimport DataSetText from '../resources/text/dataset';\r\nimport GoalText from '../resources/text/goal';\r\nimport ReactMarkdown from 'react-markdown';\r\nimport gfm from 'remark-gfm';\r\nimport '../markdown.css';\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\ninterface State {\r\n\r\n}\r\n\r\nclass HomePage extends React.Component<Props, State>{\r\n    render() {\r\n        return (\r\n            <Grid container direction=\"column\" alignItems=\"stretch\">\r\n                <Grid item>\r\n                    <ReactMarkdown plugins={[gfm]} className=\"MDtitle\">\r\n                        Billboard Top 100 analysis\r\n                    </ReactMarkdown>\r\n                </Grid>\r\n                <Grid item>\r\n                    <div className=\"centerBodyTextDiv\">\r\n                        <ReactMarkdown plugins={[gfm]} className=\"MDbody\">\r\n                            {IntroductionText}\r\n                        </ReactMarkdown>\r\n                    </div>\r\n                </Grid>\r\n                <Grid item>\r\n                    <div className=\"centerBodyTextDiv\">\r\n                        <ReactMarkdown plugins={[gfm]} className=\"MDbody\">\r\n                            {DataSetText}\r\n                        </ReactMarkdown>\r\n                    </div>\r\n                </Grid>\r\n                <Grid item>\r\n                    <div className=\"centerBodyTextDiv\">\r\n                        <ReactMarkdown plugins={[gfm]} className=\"MDbody\">\r\n                            {GoalText}\r\n                        </ReactMarkdown>\r\n                    </div>\r\n                </Grid>\r\n                <Grid item>\r\n                    <Divider />\r\n                </Grid>\r\n                <Grid item>\r\n                    <ImageFigure\r\n                        left={\r\n                            <div style={{ height: \"100%\", display: \"flex\", justifyContent: \"center\", alignContent: \"center\" }}>\r\n                                <img\r\n                                    src={process.env.PUBLIC_URL + '/network.png'}\r\n                                    alt=\"network\"\r\n                                    className=\"halfPageImage\" />\r\n                            </div>\r\n                        }\r\n                        right={\r\n                            <ReactMarkdown plugins={[gfm]} className=\"MDbody\">\r\n                                {NetworkConstructionText}\r\n                            </ReactMarkdown>\r\n                        }\r\n                    />\r\n                </Grid>\r\n                <div style={{ minHeight: \"128px\" }} />\r\n            </Grid>\r\n        );\r\n    }\r\n}\r\n\r\nexport default HomePage;","const text: string = `\r\nMusic plays a part in the daily lives of almost everyone and is one of the most widely used media of entertainment. \r\nOn average an individual listens to music up to 18 hours a week which corresponds to 52 minutes daily. \r\nMusic generally gathers inspiration from current trends and topics, which means that it can be quite significant in \r\ndetermining a popular trend in a specific period. In this project we look at the most popular songs thought history \r\n(From 1963) and analyze period defining tendencies. What we want to investigate is whether we can observe a generally \r\ndecrease in sentimental value and an increase in the use of strong language as well as determine whether this is a \r\ngeneral trend or if it’s based on isolated events.\r\n`;\r\n\r\nexport default text;","const text: string = `\r\n## Dataset\r\nFor our dataset, we knew that we wanted to look at musical hits. To limit our data to a manageable size, we have chosen to limit our dataset to top songs over the years. This way we limit the amount of data to a smaller size, while still choosing data which represents the time period. We chose 'The Billboard Hot 100' published by The Billboard Magazine as our song dataset, and although this list focuses on popularity in USA, we felt it represented global musical interest well enough for our purpose.  \r\nThis dataset was not enough, however, as it only included information about *song title*, *artist* and *rank*. We knew that we would need the lyrics of the songs as well, so we had to find an additional source of data.  \r\nWe turned to the Genius website by Genius Media Group inc and found that they had an API which allowed us to query their database by song title and artist. This second dataset allowed us to make sure our formatting of primary and featuring artists were consistent, as well as allowing us to get the lyrics of the song.  \r\nIt is the combination of these two dataset which allows us to analyze musical trends ranging from 1965 to today.  \r\nThe final network contained data from 5161 artists.\r\n`;\r\n\r\nexport default text;","const text = `\r\n## Goals\r\n\r\nOur project aims to find whether or not there is a negative trend in current music concerning negativity. We want to find out if the general trend of sentimental values in lyrics have been negative, and whether or not the negativity is contained in smaller communities or not. In short, we want to answer the following questions:\r\n\r\n- Is there a general negative trend when it comes to the average sentimental values of lyrics over the years?\r\n- Can we, via communities, find local interconnected groups of artists that line up with our understanding of genres and collaborating artists?\r\n- Is there a contained lower sentimental average within recent communities?\r\n`;\r\n\r\nexport default text;","const text: string = `\r\nThe network was constructed using python.  \r\nWe initially scraped data from the Top 100 Billboard website to get the title, artist and placement of \r\nevery hit song on the list for every week dating back to 1963.  \r\nThis information was processed by our network constructor class. The constructor would use the simple information \r\nfrom the html scraping, in order to query and retreive more in depth information, such as lyrics and featuring artists, \r\nfrom the Genius API.  \r\n\r\nThe result of the API allowed us to place the song on a node corresponding with the primary artist, or multiple nodes \r\nif multiple artists are credited as the primary artist, while also constructing edges from the featured \r\nartists to the primary artist(s) with the song title as a label.  \r\nThe song is put in a dictionary attribute of the artist node with the song title as key. The values of the \r\nsong entries are *lyrics*, *placements* and *sVal*.  \r\nThe lyrics are scraped directly off the Genius website using the URL provided by the API. The placements are a \r\nlist of objects, each representing a placement on the top 100 Billboards with their respective year, week and position.  \r\n  \r\nThe sVal, or sentimental value, is calculated based on the lyrics by tokenizing, removing stop words, and \r\ntaking the average sentimental value of the words based on the wordlist from [this link](https://journals.plos.org/plosone/article/file?type=supplementary&id=info:doi/10.1371/journal.pone.0026752.s001). \r\n`;\r\n\r\nexport default text;","export default __webpack_public_path__ + \"static/media/wreath.9d27b775.png\";","import { Button, Grid, Typography } from '@material-ui/core';\r\nimport React from 'react';\r\nimport wreath from '../resources/wreath.png'; // Tell webpack this JS file uses this image\r\n// import Sparkle from 'react-sparkle';\r\n\r\ninterface Props {\r\n    label?: String;\r\n    typographyVariant?: \"inherit\" | \"h1\" | \"h2\" | \"h3\" | \"h4\" | \"h5\" | \"h6\" | \"subtitle1\" | \"subtitle2\" | \"body1\" | \"body2\" | \"caption\" | \"button\" | \"overline\" | \"srOnly\" | undefined;\r\n    setWindow: (window: number) => void;\r\n    window: number;\r\n    christmasMode?: boolean;\r\n    selected?: boolean;\r\n}\r\n\r\ninterface State {\r\n\r\n}\r\n\r\nclass TopBarButton extends React.Component<Props, State>{\r\n    render() {\r\n        return (\r\n            <Grid item>\r\n                <Button color=\"inherit\" onClick={() => this.props.setWindow(this.props.window)}>\r\n                    <Grid container direction=\"row\" spacing={4} justify=\"center\" alignItems=\"center\">\r\n                        {this.props.christmasMode &&\r\n                            <Grid item>\r\n                                <img src={wreath} style={{ width: \"32px\", height: \"32px\" }} />\r\n                            </Grid>\r\n                        }\r\n                        <Grid item>\r\n                            <div style={{ alignContent: \"center\" }} >\r\n                                {/* {this.props.christmasMode && <Sparkle />} */}\r\n                                <Typography variant={this.props.typographyVariant ?? \"body1\"} color={this.props.selected ?? \"false\" ? \"secondary\" : \"inherit\"}>\r\n                                    {this.props.label ?? \"\"}\r\n                                </Typography>\r\n                            </div>\r\n                        </Grid>\r\n                        {this.props.christmasMode &&\r\n                            <Grid item>\r\n                                <img src={wreath} style={{ width: \"32px\", height: \"32px\" }} />\r\n                            </Grid>\r\n                        }\r\n                    </Grid>\r\n                </Button>\r\n            </Grid>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TopBarButton;","import { AppBar, Grid, Toolbar } from '@material-ui/core';\r\nimport React from 'react';\r\nimport TopBarButton from './TopBarButton';\r\n\r\ninterface Props {\r\n    setWindow: (window: number) => void;\r\n    selectedWindow: number;\r\n}\r\n\r\ninterface State {\r\n\r\n}\r\n\r\nclass TopBar extends React.Component<Props, State>{\r\n    render() {\r\n        return (\r\n            <AppBar position=\"sticky\">\r\n                <Toolbar>\r\n                    <Grid container direction=\"row\" alignItems=\"center\" justify=\"space-between\">\r\n                        <TopBarButton\r\n                            label=\"Home\"\r\n                            typographyVariant=\"h5\"\r\n                            setWindow={this.props.setWindow}\r\n                            window={0}\r\n                            selected={0 == this.props.selectedWindow}\r\n                        />\r\n                        <TopBarButton\r\n                            label=\"Collaborations\"\r\n                            setWindow={this.props.setWindow}\r\n                            window={1}\r\n                            selected={1 == this.props.selectedWindow}\r\n                        />\r\n                        <TopBarButton\r\n                            label=\"Word Clouds\"\r\n                            setWindow={this.props.setWindow}\r\n                            window={2}\r\n                            selected={2 == this.props.selectedWindow}\r\n                        />\r\n                        <TopBarButton\r\n                            label=\"Communities\"\r\n                            setWindow={this.props.setWindow}\r\n                            window={3}\r\n                            selected={3 == this.props.selectedWindow}\r\n                        />\r\n                        <TopBarButton\r\n                            label=\"Sentimental Analysis\"\r\n                            setWindow={this.props.setWindow}\r\n                            window={4}\r\n                            selected={4 == this.props.selectedWindow}\r\n                        />\r\n                        <TopBarButton\r\n                            label=\"Profanity\"\r\n                            setWindow={this.props.setWindow}\r\n                            window={5}\r\n                            selected={5 == this.props.selectedWindow}\r\n                        />\r\n                        <TopBarButton label=\"Christmas\"\r\n                            setWindow={this.props.setWindow}\r\n                            window={6}\r\n                            selected={6 == this.props.selectedWindow}\r\n                            christmasMode={true}\r\n                        />\r\n                    </Grid>\r\n                </Toolbar>\r\n            </AppBar>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TopBar;","import { Button, Grid } from '@material-ui/core';\r\nimport React from 'react';\r\n\r\ninterface Props {\r\n}\r\n\r\ninterface State {\r\n}\r\n\r\nclass BottomBar extends React.Component<Props, State>{\r\n\r\n    render() {\r\n        return (\r\n            <div style={{ position: \"fixed\", bottom: 0, width: \"100%\", backgroundColor: \"grey\"}}>\r\n                <Grid container direction=\"row\" justify=\"flex-end\">\r\n                    <Grid item>\r\n                        <Button target=\"_blank\" href=\"https://github.com/SebastianKotewitz/social_graphs_billboard/raw/main/downloadFiles/fullNetworkSentiment.gpickle\" variant=\"contained\" style={{marginRight: \"24px\"}}>\r\n                            Download Network\r\n                        </Button>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Button target=\"_blank\" href=\"http://www.google.com/\" variant=\"contained\" style={{marginRight: \"24px\"}}>\r\n                            Download ipynb\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </div >\r\n        );\r\n    }\r\n}\r\n\r\nexport default BottomBar;","import { Divider, Grid } from '@material-ui/core';\r\nimport ImageFigure from '../ImageFigure';\r\nimport React from 'react';\r\nimport SentimentalIntroductionText from '../resources/text/sentIntroduction';\r\nimport Text1 from '../resources/text/sentText1';\r\nimport Text2 from '../resources/text/sentText2';\r\nimport ReactMarkdown from 'react-markdown';\r\nimport gfm from 'remark-gfm';\r\nimport '../markdown.css';\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\ninterface State {\r\n\r\n}\r\n\r\nclass SentimentalPage extends React.Component<Props, State>{\r\n    render() {\r\n        return (\r\n            <Grid container direction=\"column\" alignItems=\"stretch\">\r\n                <Grid item>\r\n                    <div className=\"centerBodyTextDiv\">\r\n                        <ReactMarkdown plugins={[gfm]} className=\"MDbody\">\r\n                            {SentimentalIntroductionText}\r\n                        </ReactMarkdown>\r\n                    </div>\r\n                </Grid>\r\n                <Grid item>\r\n                    <Divider />\r\n                </Grid>\r\n                <Grid item>\r\n                    <ImageFigure\r\n                        left={\r\n                            <ReactMarkdown plugins={[gfm]} className=\"MDbody\">\r\n                                {Text1}\r\n                            </ReactMarkdown>\r\n                        }\r\n                        right={\r\n                            <div style={{ height: \"100%\", display: \"flex\", justifyContent: \"center\", alignContent: \"center\" }}>\r\n                                <img\r\n                                    src={process.env.PUBLIC_URL + '/sentimentPerYear.png'}\r\n                                    alt=\"network\"\r\n                                    className=\"halfPageImage\" />\r\n                            </div>\r\n                        }\r\n                    />\r\n                </Grid>\r\n                <Grid item>\r\n                    <ImageFigure\r\n                        left={\r\n                            <div style={{ height: \"100%\", display: \"flex\", justifyContent: \"center\", alignContent: \"center\" }}>\r\n                                <img\r\n                                    src={process.env.PUBLIC_URL + '/sentimentPerQ.png'}\r\n                                    alt=\"network\"\r\n                                    className=\"halfPageImage\" />\r\n                            </div>\r\n                        }\r\n                        right={\r\n                            <ReactMarkdown plugins={[gfm]} className=\"MDbody\">\r\n                                {Text2}\r\n                            </ReactMarkdown>\r\n                        }\r\n                    />\r\n                </Grid>\r\n                <div style={{ minHeight: \"128px\" }} />\r\n            </Grid>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SentimentalPage;","const text: string = `\r\nFor sentimental values we went through all lyrics in the network. Using the happines_average \r\nvalues of the wordlist from \r\n[this link](https://journals.plos.org/plosone/article/file?type=supplementary&id=info:doi/10.1371/journal.pone.0026752.s001), \r\nwe took all non-stop words in a songs lyrics and calculated the average score. This one value is used as the sentimental \r\nvalue of the lyrics for that song.\r\n`;\r\n\r\nexport default text;","const text: string = `\r\nInterested in how the trend in average sentimental value over time looked, we looked at the average sentimental \r\nvalue of songs for every year since 1965. We plotted the data points in a bar graph to visualize the evolution over \r\ntime. This visualization revealed a negative trend in the average sentimental value of lyrics for each year. \r\nOur graph is shown zoomed in to highlight the trend, and it is only meant to show the fact that such a trend \r\nexists. It is not necessarily meant to show the magnitude of the change over time.  \r\nThe findings of this analysis aligns with our initial hypothesis and marks completion of one of our core goals. \r\nMusic has indeed become more negatively charged over time if we consider the sentimental value of lyrics as an indicator.\r\n`;\r\n\r\nexport default text;","const text: string = `\r\nOut of curiosity, we also made a visualization of the average sentimental value of songs within quarters of the year. \r\nEvery song had its sentimental value attached to the quarter of the year in which it first appeared, and the average \r\nsentimental value for each of the four yearly quarters was calculated. These averages are presented as a bar graph, \r\nand it is shown that the average sentimental value of songs per quarter is *very* similar. The graph shows no significant \r\nrelation between quarter and sentimental value. The data is independent of release year.\r\n`;\r\n\r\nexport default text;","import { Divider, Grid } from '@material-ui/core';\r\nimport ImageFigure from '../ImageFigure';\r\nimport React from 'react';\r\nimport CollabIntro from '../resources/text/collabIntro';\r\nimport Text1 from '../resources/text/collabText1';\r\nimport ReactMarkdown from 'react-markdown';\r\nimport gfm from 'remark-gfm';\r\nimport '../markdown.css';\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\ninterface State {\r\n\r\n}\r\n\r\nclass CollaborationsPage extends React.Component<Props, State>{\r\n    render() {\r\n        return (\r\n            <Grid container direction=\"column\" alignItems=\"stretch\">\r\n                <Grid item>\r\n                    <div className=\"centerBodyTextDiv\">\r\n                        <ReactMarkdown plugins={[gfm]} className=\"MDbody\">\r\n                            {CollabIntro}\r\n                        </ReactMarkdown>\r\n                    </div>\r\n                </Grid>\r\n                <Grid item>\r\n                    <Divider />\r\n                </Grid>\r\n                <Grid item>\r\n                    <ImageFigure\r\n                        left={\r\n                            <ReactMarkdown plugins={[gfm]} className=\"MDbody\">\r\n                                {Text1}\r\n                            </ReactMarkdown>\r\n                        }\r\n                        right={\r\n                            <div style={{ height: \"100%\", display: \"flex\", justifyContent: \"center\", alignContent: \"center\" }}>\r\n                                <img\r\n                                    src={process.env.PUBLIC_URL + '/collabsPerSongPerYear.png'}\r\n                                    alt=\"network\"\r\n                                    className=\"halfPageImage\" />\r\n                            </div>\r\n                        }\r\n                    />\r\n                </Grid>\r\n                <div style={{ minHeight: \"128px\" }} />\r\n            </Grid>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CollaborationsPage;","const text: string = `\r\nWe wanted to see the trend in collaborations over the years. To do this, we looked at all edges in the dataset. \r\nWe wanted the data to be normalized, so we also had to count the amount of songs for each year. \r\nThe year of a song is determined by the first time it appears on the Billboard list.  \r\n\r\nWe hypothesized that the amount of collaborations have grown over time, so we figured out a way of visualizing \r\nthe trend of collaborations when compared to the total amount of songs for each year.\r\n`;\r\n\r\nexport default text;","const text: string = `\r\nThe graph shows the relation between total songs and the amount of songs which have been collaboratory work, where \r\n0 is if no songs are collaborative works, and a value of 1 is if every song is a collaboration.  \r\nThe results show a considerable trend towards more collaboration. It is also interesting to see how some \r\nof the earlier years appear to have more collaboration between artists than the years 1970-1989. \r\n`;\r\n\r\nexport default text;","import './App.css';\nimport React from 'react';\nimport HomePage from './homePage/HomePage';\nimport TopBar from './topBar/TopBar';\nimport BottomBar from './bottomBar/BottomBar';\nimport SentimentalPage from './sentimental/SentimentalPage';\nimport CollaborationsPage from './collaborations/collaborationsPage';\n\ninterface Props {\n}\n\ninterface State {\n  selectedWindow: number;\n}\n\nclass App extends React.Component<Props, State>{\n\n  constructor(props: Props) {\n    super(props);\n    this.setWindow = this.setWindow.bind(this);\n    this.state = { selectedWindow: 0 };\n  }\n\n  setWindow(n: number): void {\n    this.setState({ selectedWindow: n });\n  }\n\n  render() {\n    return (\n      <div className=\"App\" >\n        <TopBar setWindow={this.setWindow} selectedWindow={this.state.selectedWindow} />\n        <header className=\"App-header\">\n          {this.state.selectedWindow === 0 ? <HomePage /> : <div />}\n          {this.state.selectedWindow === 1 ? <CollaborationsPage /> : <div />}\n          {this.state.selectedWindow === 4 ? <SentimentalPage /> : <div />}\n        </header>\n        <BottomBar />\n      </div >\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}